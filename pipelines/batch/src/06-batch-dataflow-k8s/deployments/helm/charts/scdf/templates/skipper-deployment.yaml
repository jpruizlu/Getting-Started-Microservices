apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "scdf.fullname" . }}-skipper
  labels:
    app: {{ template "scdf.name" . }}
    component: skipper
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "scdf.name" . }}
      component: skipper
      release: "{{ .Release.Name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "scdf.name" . }}
        component: skipper
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: {{ template "scdf.fullname" . }}-skipper
        image: {{ .Values.skipper.image }}:{{ .Values.skipper.version }}
        imagePullPolicy: {{ .Values.skipper.imagePullPolicy }}
        volumeMounts:
          {{- if .Values.global.rabbitmq.enabled}}
          - name: rabbitmq
            mountPath: /etc/secrets/rabbitmq
            readOnly: true
          {{- end}}
        ports:
        - containerPort: 7577
          name: http
        resources:
{{ toYaml .Values.skipper.resources | indent 10 }}
        livenessProbe:
          httpGet:
            path: /api/about
            port: http
          initialDelaySeconds: 90
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/about
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: SERVER_PORT
          value: '7577'
        - name: SPRING_CLOUD_KUBERNETES_SECRETS_ENABLE_API
          value: 'true'
        - name: SPRING_CLOUD_KUBERNETES_SECRETS_PATHS
          value: /etc/secrets
        - name: SPRING_DATASOURCE_URL
          value: jdbc:{{ .Values.database.type }}://{{ .Values.database.host }}:{{ .Values.database.port }}/dataflow
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ .Values.database.username }}
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "scdf.fullname" . }}
              key: database-password
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: {{ .Values.database.driverClassName }}
        - name: SPRING_CLOUD_KUBERNETES_CONFIG_NAME
          value: {{ template "scdf.fullname" . }}-skipper
        {{- if .Values.global.rabbitmq.enabled}}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ printf "%s-%s" .Release.Name "rabbitmq" | trunc 63 | trimSuffix "-" }}
              key: rabbitmq-password
        {{- end}}
      volumes:
        {{- if .Values.global.rabbitmq.enabled}}
        - name: rabbitmq
          secret:
            secretName: {{ printf "%s-%s" .Release.Name "rabbitmq" | trunc 63 | trimSuffix "-" }}
        {{- end}}
      initContainers:
      - name: init-db-wait
        image: busybox
        command: ['sh', '-c', 'until nc -w3 -z {{ .Values.database.host }} {{ .Values.database.port }}; do echo waiting for database; sleep 3; done;']
