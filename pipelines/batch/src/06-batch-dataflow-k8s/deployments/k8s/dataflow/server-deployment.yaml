apiVersion: apps/v1
kind: Deployment
metadata:
  name: scdf-server
  labels:
    app: scdf-server
spec:
  selector:
    matchLabels:
      app: scdf-server
  replicas: 1
  template:
    metadata:
      labels:
        app: scdf-server
    spec:
      containers:
      - name: scdf-server
        image: springcloud/spring-cloud-dataflow-server:2.0.1.RELEASE
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 1.0
            memory: 2048Mi
          requests:
            cpu: 0.5
            memory: 1024Mi
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: SERVER_PORT
          value: '80'
        - name: SPRING_CLOUD_CONFIG_ENABLED
          value: 'false'
        - name: SPRING_CLOUD_DATAFLOW_SERVER_URI
          value: 'http://scdf-server.default.svc.cluster.local:80'
        - name: SPRING_CLOUD_DATAFLOW_FEATURES_ANALYTICS_ENABLED
          value: 'true'
        - name: SPRING_CLOUD_DATAFLOW_FEATURES_SCHEDULES_ENABLED
          value: 'true'
        - name: SPRING_CLOUD_DEPLOYER_KUBERNETES_CREATE_DEPLOYMENT
        #- name: SPRING_CLOUD_DEPLOYER_KUBERNETES_CREATE_JOB
          value: 'true'
        - name: SPRING_CLOUD_DEPLOYER_KUBERNETES_MEMORY
          value: 1024Mi
        - name: SPRING_CLOUD_DEPLOYER_KUBERNETES_READINESS_PROBE_DELAY
          value: '90'
        - name: SPRING_CLOUD_DEPLOYER_KUBERNETES_LIVENESS_PROBE_DELAY
          value: '90'
        - name: SPRING_CLOUD_KUBERNETES_SECRETS_ENABLE_API
          value: 'true'
        - name: SPRING_CLOUD_KUBERNETES_CONFIG_NAME
          value: scdf-server
      initContainers:
        # Create databases if not exists. This initialization is specific only on postgres databases.
        # Use 'jdbc:mysql://dbhost:5432/db?createDatabaseIfNotExist=true' for other databases that supports this feature
      - name: init-create-dataflow
        image: postgres:10.7-alpine
        command: ['sh', '-c', 'PGPASSWORD=password createuser -h postgres.default.svc.cluster.local -p 5432 -U postgres dataflow; PGPASSWORD=password createdb -h postgres.default.svc.cluster.local -p 5432 -O dataflow -U postgres dataflow;echo 0']
      serviceAccountName: scdf-sa
